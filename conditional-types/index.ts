/*
- Вам потрібно створити умовний тип, що служить для встановлення типу, що повертається з функції. Як параметр типу повинен обов'язково виступати функціональний тип.
- Вам потрібно створити умовний тип, який приймає функціональний тип з одним параметром (або задовільним) та повертає кортеж, де перше значення - це тип, що функція повертає, а другий - тип її параметру
 */

// task 1
type TReturnType<T> = T extends (...args: any[]) => infer R ? R : any;

// task 2
type TFuncArgAndReturnType<T> = T extends (arg: infer P) => infer R ? [R, P] : any;